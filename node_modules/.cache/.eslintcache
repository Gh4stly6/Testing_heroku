[{"/home/guillermo/project/certificate-project2/src/index.js":"1","/home/guillermo/project/certificate-project2/src/App.js":"2","/home/guillermo/project/certificate-project2/src/reportWebVitals.js":"3","/home/guillermo/project/certificate-project2/src/components/HeaderNav.js":"4","/home/guillermo/project/certificate-project2/src/components/CertificateTable.js":"5","/home/guillermo/project/certificate-project2/src/components/Form.js":"6","/home/guillermo/project/certificate-project2/src/src/aws-exports.js":"7"},{"size":503,"mtime":1639670172454,"results":"8","hashOfConfig":"9"},{"size":1414,"mtime":1639754261714,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1639422436441,"results":"11","hashOfConfig":"9"},{"size":407,"mtime":1639754261714,"results":"12","hashOfConfig":"9"},{"size":4257,"mtime":1639754261714,"results":"13","hashOfConfig":"9"},{"size":5519,"mtime":1639754261714,"results":"14","hashOfConfig":"9"},{"size":1383,"mtime":1639672521741,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ibtyh7",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/guillermo/project/certificate-project2/src/index.js",[],["35","36"],"/home/guillermo/project/certificate-project2/src/App.js",["37","38"],"import './App.css';\nimport CertificateTable from './components/CertificateTable';\nimport Addform from './components/Form';\nimport logo_white from './components/img/logo_white.png'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Amplify from 'aws-amplify';\n\n\nimport {withAuthenticator } from '@aws-amplify/ui-react'\nimport '@aws-amplify/ui-react/styles.css';\n\nimport awsExports from './src/aws-exports'\n\nAmplify.configure(awsExports)\n\n{/*Adding cognito authentication with aws libraries */}\nfunction App( {signOut, user}) {\n  return (\n    <div className='App'>\n      \n      <header className='App-header'>\n        <>\n         <nav class=\"navbar navbar-expand-xxl bg-dark fixed-top navbar-dark\">\n          <div class=\"container-fluid\">\n           <a class=\"navbar-brand\" href=\"#\">\n             <img src={logo_white} alt=\"\" width=\"100\"/>\n           </a>\n           <div>\n               <h4>Hello {user.username}</h4> \n           </div>\n           <div>\n           <button  type=\"button\" class=\"btn btn-outline-danger\" onClick={signOut}>Sign out</button>\n           </div>\n         </div>\n           </nav>\n        </>\n      </header>\n\n\n       <body className='App-body'>\n        <div className='App-table'>\n          <CertificateTable />\n        </div>\n         <div className='App-form'>\n          <Addform/>\n         </div>\n       </body>\n      \n    </div>\n   \n  );\n}\n\n\nexport default withAuthenticator(App);\n","/home/guillermo/project/certificate-project2/src/reportWebVitals.js",[],"/home/guillermo/project/certificate-project2/src/components/HeaderNav.js",["39","40"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo_blue from './img/logo_blue.png';\n\n\nfunction HeaderNav() {\n    return (\n      <nav class=\"navbar navbar-light bg-light\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">\n          <img src={logo_blue} alt=\"\" width=\"100\"/>\n          <h1>Hello {user.username}</h1>\n        </a>\n      </div>\n    </nav>\n    )\n}\n\nexport default HeaderNav\n","/home/guillermo/project/certificate-project2/src/components/CertificateTable.js",["41","42","43","44","45","46"],"import { useState } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport _ from \"lodash\";\nimport MOCK_DATA from './MOCK_DATA.json'\nimport Nav from 'react-bootstrap/Nav'\nimport handleAddFormSubmit from \"./Form\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n{/*Using a Hook useState to add funcionality to out filter*/}\nconst CertificateTable = () => {\n  const [searchTerm, setsearchTerm] = useState(\"\");\n  return (\n    <div className= \"app-container\" >\n\n  {/*Table Title*/}\n      <h2>Certification Record</h2>\n\n      {/*Creating filter component\n          define a inpute for the search bar, adding some styles*/}\n      <div className='App-filter'>\n        <input type=\"text\"\n         placeholder='Search...' \n         style={{marginTop:50, marginBottom: 20, width: \"40%\"}}\n         onChange={(e) =>{\n           setsearchTerm(e.target.value)\n         }}\n         />\n\n      </div>\n      \n      {/*Table Sructure, includes Bootrastap*/}\n      <div class=\"table-responsive-xxl\">\n      <table class=\"table table-bordered table-hover\" >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Department</th>\n            <th>Position</th>\n            <th>Account</th>\n            <th>Start Date</th>\n            <th>Status</th>\n            <th>Course Name</th>\n            <th>Training category</th>\n            <th>Trainig Date</th>\n            <th>End Date</th>\n            <th>Training Delivery</th>\n            <th>Provider</th>\n            <th>Instructor Name</th>\n            <th>Training Status</th>\n            <th>Certificate Expiration Date</th>\n            <th>Comments</th>\n            <th>Certificate</th>\n            <th>Actions</th>\n            \n          </tr>\n        </thead>\n        <tbody>\n\n            {MOCK_DATA.filter((val) => {\n              if (searchTerm === \"\"){\n                return val;\n              } else if (\n                val.Name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Provider.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Department.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Account.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Training_Category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Training_Delivery.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Training_Status.toLowerCase().includes(searchTerm.toLowerCase())\n              ){\n                return val;\n              }\n                \n            }).map((contacts)=>(\n              <tr key={contacts.id}>\n                <td>{contacts.Name}</td>\n                <td>{contacts.Email}</td>\n                <td>{contacts.Department}</td>\n                <td>{contacts.Position}</td>\n                <td>{contacts.Account}</td>\n                <td>{contacts.Start_Date}</td>\n                <td>{contacts.Status}</td>\n                <td>{contacts.Course_Name}</td>\n                <td>{contacts.Training_Category}</td>\n                <td>{contacts.Trainig_Date}</td>\n                <td>{contacts.End_Date}</td>\n                <td>{contacts.Training_Delivery}</td>\n                <td>{contacts.Provider}</td>\n                <td>{contacts.Instructor_Name}</td>\n                <td>{contacts.Training_Status}</td>\n                <td>{contacts.Certificate_Expiration_Date}</td>\n                <td>{contacts.Comments}</td>\n                <td>\n                  <div class=\"d-flex\">\n                  <p>\n                    <Button>Upload</Button>\n                  </p>\n                  <p><Button variant='secondary'>Download</Button></p>\n                  </div>\n                </td>\n                <td>\n                  <div class=\"d-flex\">\n                  <p>\n                    <Button>Edit</Button>\n                  </p>\n                  <p><Button variant='danger'>Delete</Button></p>\n                  </div>\n                 \n                </td>\n\n              </tr>\n            ))}\n        </tbody>\n      </table>\n\n\n      </div>\n      \n    </div>\n    \n  )\n}\n\nexport default CertificateTable","/home/guillermo/project/certificate-project2/src/components/Form.js",["47","48"],"import Button from \"@restart/ui/esm/Button\";\nimport { useState } from 'react';\nimport React from \"react\";\nimport {nanoid} from 'nanoid';\nimport MOCK_DATA from './MOCK_DATA.json'\n\nfunction Addform() {\n  const [contacts, setContacts] = useState(MOCK_DATA);\n  const [addFormData, setAddFormData] = useState({\n    Name: '',\n    Email: '',\n    Department: '',\n    Position: '',\n    Account: '',\n    Start_date: '',\n    Status: '',\n    Course_name: '',\n    Training_category: '',\n    Training_date: '',\n    End_date: '',\n    Training_delivery: '',\n    Provider: '',\n    Instructor_name: '',\n    Training_status: '',\n    Certificate_Expiration_Date: '',\n    Comments: ''\n  });\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldname = event.target.getAttribute(\"name\");\n    const fieldvalue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldname] = fieldvalue;\n\n    setAddFormData(newFormData);\n  };\n  const handleAddFormSubmit = (event) =>{\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      Name: addFormData.Name,\n      Email: addFormData.Email,\n      Department: addFormData.Department,\n      Position: addFormData.Position,\n      Account: addFormData.Account,\n      Start_Date: addFormData.Start_Date,\n      Status: addFormData.Status,\n      Training_Category: addFormData.Training_Category,\n      End_Date: addFormData.End_Date,\n      Training_Date: addFormData.Training_Date,\n      Course_Name: addFormData.Course_Name,\n      Training_Delivery: addFormData.Training_Delivery,\n      Provider: addFormData.Provider,\n      Instructor_Name: addFormData.Instructor_Name,\n      Training_Status: addFormData.Training_Status,\n      Certificate_Expiration_Date: addFormData.Certificate_Expiration_Date,\n      Comments: addFormData.Comments,\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n\n};\n\n  return (\n    <form onSubmit={handleAddFormSubmit}>\n      <div class=\"row\">\n        <div class=\"col\">\n          <label>\n            Name:\n            <input type=\"text\" name=\"name\" required=\"required\" placeholder=\"Enter a name...\" onChange={handleAddFormChange}/>\n          </label>\n    \n          <label>\n            Email:\n            <input type=\"text\" name=\"Email\" required=\"required\" placeholder=\"Enter an email...\" onChange={handleAddFormChange} />\n          </label>\n        </div>\n      </div>\n        \n        <label>\n          Department:\n          <input type=\"text\" name=\"Department\" required=\"required\" placeholder=\"Enter a department...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Position:\n          <input type=\"text\" name=\"Position\" required=\"required\" placeholder=\"Enter a position...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Account:\n          <input type=\"text\" name=\"Account\" required=\"required\" placeholder=\"Enter an account...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Start date: \n          <input type=\"text\" name=\"Start Date\" required=\"required\" placeholder=\"Enter a start date...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Status:\n          <input type=\"text\" name=\"Status\" required=\"required\" placeholder=\"Enter a status...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Training category:\n          <input type=\"text\" name=\"Training category\" required=\"required\" placeholder=\"Enter a training category...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          End date:\n          <input type=\"text\" name=\"End Date\" required=\"required\" placeholder=\"Enter an end date...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Training date:\n          <input type=\"text\" name=\"Trainig Date\" required=\"required\" placeholder=\"Enter a trainig date...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Course name:\n          <input type=\"text\" name=\"Course Name\" required=\"required\" placeholder=\"Enter a course Name...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Training delivery:\n          <input type=\"text\" name=\"Training Delivery\" required=\"required\" placeholder=\"Enter a training delivery...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Provider:\n          <input type=\"text\" name=\"Provider\" required=\"required\" placeholder=\"Enter a provider...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Instructor name:\n          <input type=\"text\" name=\"Instructor Name\" required=\"required\" placeholder=\"Enter an instructor name...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Training status:\n          <input type=\"text\" name=\"Training Status\" required=\"required\" placeholder=\"Enter a training status...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Certificate expiration date:\n          <input type=\"text\" name=\"Certificate Expiration Date\" required=\"required\" placeholder=\"Enter a certificate expiration date...\" onChange={handleAddFormChange} />\n        </label>\n        <label>\n          Comments:\n          <input type=\"text\" name=\"Comments\" required=\"required\" placeholder=\"Enter Comments...\" />\n        </label>\n\n        <button type=\"button\" class=\"btn btn-success\" type=\"submit\">Add </button>\n      \n      \n    </form>\n  )\n}\n\n\nexport default Addform","/home/guillermo/project/certificate-project2/src/src/aws-exports.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":16,"column":1,"nodeType":"55","messageId":"56","endLine":16,"endColumn":56},{"ruleId":"57","severity":1,"message":"58","line":25,"column":12,"nodeType":"59","endLine":25,"endColumn":45},{"ruleId":"57","severity":1,"message":"58","line":10,"column":9,"nodeType":"59","endLine":10,"endColumn":42},{"ruleId":"60","severity":2,"message":"61","line":12,"column":22,"nodeType":"62","messageId":"63","endLine":12,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":2,"column":8,"nodeType":"62","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"67","line":4,"column":8,"nodeType":"62","messageId":"66","endLine":4,"endColumn":9},{"ruleId":"64","severity":1,"message":"68","line":6,"column":8,"nodeType":"62","messageId":"66","endLine":6,"endColumn":11},{"ruleId":"64","severity":1,"message":"69","line":7,"column":8,"nodeType":"62","messageId":"66","endLine":7,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":10,"column":1,"nodeType":"55","messageId":"56","endLine":10,"endColumn":62},{"ruleId":"70","severity":1,"message":"71","line":61,"column":37,"nodeType":"72","messageId":"73","endLine":61,"endColumn":39},{"ruleId":"64","severity":1,"message":"74","line":1,"column":8,"nodeType":"62","messageId":"66","endLine":1,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":145,"column":55,"nodeType":"77","messageId":"78","endLine":145,"endColumn":68},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-undef","'user' is not defined.","Identifier","undef","no-unused-vars","'Table' is defined but never used.","unusedVar","'_' is defined but never used.","'Nav' is defined but never used.","'handleAddFormSubmit' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]