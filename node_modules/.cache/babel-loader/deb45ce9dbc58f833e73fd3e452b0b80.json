{"ast":null,"code":"var _jsxFileName = \"/home/guillermo/project/certificate-project2/src/components/addform.js\";\nimport React, { Component } from 'react'; // you should use ReactDOM.render instad of React.renderComponent\n\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToggleBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // toggle box is closed initially\n      isOpened: false\n    }; // http://egorsmirnov.me/2015/08/16/react-and-es6-part3.html\n\n    this.toggleBox = this.toggleBox.bind(this);\n  }\n\n  toggleBox() {\n    this.setState(oldState => ({\n      isOpened: !oldState.isOpened\n    }));\n  }\n\n  render() {\n    const {\n      title,\n      children\n    } = this.props;\n    const {\n      isOpened\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxTitle\",\n        onClick: this.toggleBox,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), isOpened && children && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxContent\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ToggleBox, {\n  title: \"Click me\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Some content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["/home/guillermo/project/certificate-project2/src/components/addform.js"],"names":["React","Component","ReactDOM","ToggleBox","constructor","props","state","isOpened","toggleBox","bind","setState","oldState","render","title","children","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,QAAQ,EAAE;AAFC,KAAb,CAFiB,CAMjB;;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,GAAG;AACV,SAAKE,QAAL,CAAcC,QAAQ,KAAK;AAAEJ,MAAAA,QAAQ,EAAE,CAACI,QAAQ,CAACJ;AAAtB,KAAL,CAAtB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKT,KAAjC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAE,KAAKE,SAAxC;AAAA,kBACGK;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EAIGN,QAAQ,IAAIO,QAAZ,iBACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA9B+B;;AAiClCZ,QAAQ,CAACU,MAAT,eACE,QAAC,SAAD;AAAW,EAAA,KAAK,EAAC,UAAjB;AAAA,yBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIGG,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAJH","sourcesContent":["import React, { Component } from 'react';\n// you should use ReactDOM.render instad of React.renderComponent\nimport ReactDOM from 'react-dom';\n\nclass ToggleBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // toggle box is closed initially\n      isOpened: false,\n    };\n    // http://egorsmirnov.me/2015/08/16/react-and-es6-part3.html\n    this.toggleBox = this.toggleBox.bind(this);\n  }\n\n  toggleBox() {\n    this.setState(oldState => ({ isOpened: !oldState.isOpened }));\n  }\n\n  render() {\n    const { title, children } = this.props;\n    const { isOpened } = this.state;\n    return (\n      <div className=\"box\">\n        <div className=\"boxTitle\" onClick={this.toggleBox}>\n          {title}\n        </div>\n        {isOpened && children && (\n          <div className=\"boxContent\">\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nReactDOM.render((\n  <ToggleBox title=\"Click me\">\n    <div>Some content</div>\n  </ToggleBox>\n), document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}