{"ast":null,"code":"var _jsxFileName = \"/home/guillermo/project/certificate-project2/src/components/addform.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"https://cdn.skypack.dev/react@17.0.1\";\nimport * as ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = () => {\n  _s();\n\n  const [values, setValues] = React.useState({\n    name: '',\n    email: '',\n    gender: ''\n  });\n  const [validations, setValidations] = React.useState({\n    name: '',\n    email: '',\n    gender: ''\n  });\n\n  const validateAll = () => {\n    const {\n      name,\n      email,\n      gender\n    } = values;\n    const validations = {\n      name: '',\n      email: '',\n      gender: ''\n    };\n    let isValid = true;\n\n    if (!name) {\n      validations.name = 'Name is required';\n      isValid = false;\n    }\n\n    if (name && name.length < 3 || name.length > 50) {\n      validations.name = 'Name must contain between 3 and 50 characters';\n      isValid = false;\n    }\n\n    if (!email) {\n      validations.email = 'Email is required';\n      isValid = false;\n    }\n\n    if (email && !/\\S+@\\S+\\.\\S+/.test(email)) {\n      validations.email = 'Email format must be as example@mail.com';\n      isValid = false;\n    }\n\n    if (!gender) {\n      validations.gender = 'Gender is required';\n      isValid = false;\n    }\n\n    if (!isValid) {\n      setValidations(validations);\n    }\n\n    return isValid;\n  };\n\n  const validateOne = e => {\n    const {\n      name\n    } = e.target;\n    const value = values[name];\n    let message = '';\n\n    if (!value) {\n      message = `${name} is required`;\n    }\n\n    if (value && name === 'name' && (value.length < 3 || value.length > 50)) {\n      message = 'Name must contain between 3 and 50 characters';\n    }\n\n    if (value && name === 'email' && !/\\S+@\\S+\\.\\S+/.test(value)) {\n      message = 'Email format must be as example@mail.com';\n    }\n\n    setValidations({ ...validations,\n      [name]: message\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validateAll();\n\n    if (!isValid) {\n      return false;\n    }\n\n    alert(JSON.stringify(values));\n  };\n\n  const {\n    name,\n    email,\n    gender\n  } = values;\n  const {\n    name: nameVal,\n    email: emailVal,\n    gender: genderVal\n  } = validations;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            onChange: handleChange,\n            onBlur: validateOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: nameVal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: handleChange,\n            onBlur: validateOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: emailVal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Female\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"gender\",\n            value: \"F\",\n            onChange: handleChange,\n            onBlur: validateOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Male\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"gender\",\n            value: \"M\",\n            onChange: handleChange,\n            onBlur: validateOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: genderVal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Values of the form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(values)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MyForm, \"GXixvTUUu+rVZHfKYHMBhdLyT2c=\");\n\n_c = MyForm;\nReactDOM.render( /*#__PURE__*/_jsxDEV(MyForm, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 162,\n  columnNumber: 17\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/home/guillermo/project/certificate-project2/src/components/addform.js"],"names":["React","ReactDOM","MyForm","values","setValues","useState","name","email","gender","validations","setValidations","validateAll","isValid","length","test","validateOne","e","target","value","message","handleChange","handleSubmit","preventDefault","alert","JSON","stringify","nameVal","emailVal","genderVal","render","document","getElementById"],"mappings":"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","sourcesContent":["import * as React from \"https://cdn.skypack.dev/react@17.0.1\";\nimport * as ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\n\nconst MyForm = () => {\n  const [values, setValues] = React.useState({\n    name: '',\n    email: '',\n    gender: ''\n  })\n \n  const [validations, setValidations] = React.useState({\n    name: '',\n    email: '',\n    gender: ''\n  })\n  \n  const validateAll = () => {\n    const { name, email, gender } = values\n    const validations = { name: '', email: '', gender: '' }\n    let isValid = true\n    \n    if (!name) {\n      validations.name = 'Name is required'\n      isValid = false\n    }\n    \n    if (name && name.length < 3 || name.length > 50) {\n      validations.name = 'Name must contain between 3 and 50 characters'\n      isValid = false\n    }\n    \n    if (!email) {\n      validations.email = 'Email is required'\n      isValid = false\n    }\n    \n    if (email && !/\\S+@\\S+\\.\\S+/.test(email)) {\n      validations.email = 'Email format must be as example@mail.com'\n      isValid = false\n    }\n    \n    if (!gender) {\n      validations.gender = 'Gender is required'\n      isValid = false\n    }\n    \n    if (!isValid) {\n      setValidations(validations)\n    }\n    \n    return isValid\n  }\n\n  const validateOne = (e) => {\n    const { name } = e.target\n    const value = values[name]\n    let message = ''\n    \n    if (!value) {\n      message = `${name} is required`\n    }\n    \n    if (value && name === 'name' && (value.length < 3 || value.length > 50)) {\n      message = 'Name must contain between 3 and 50 characters'\n    }\n\n    if (value && name === 'email' && !/\\S+@\\S+\\.\\S+/.test(value)) {\n      message = 'Email format must be as example@mail.com'\n    }\n    \n    setValidations({...validations, [name]: message })\n  }\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setValues({...values, [name]: value })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const isValid = validateAll()\n    \n    if (!isValid) {\n      return false\n    }\n\n    alert(JSON.stringify(values))\n  }\n  \n  const { name, email, gender } = values\n\n  const { \n    name: nameVal, \n    email: emailVal, \n    gender: genderVal \n  } = validations\n  \n    return (\n      <div>\n         <h1>Simple form</h1>\n         <form onSubmit={handleSubmit}>\n          <div>\n            <label>Name:\n              <input \n                type=\"text\"\n                name=\"name\"\n                value={name} \n                onChange={handleChange}\n                onBlur={validateOne}\n              />\n            </label>\n            <div>{nameVal}</div>\n          </div>\n          \n          <div>\n            <label>Email:\n              <input \n                type=\"email\"\n                name=\"email\"\n                value={email} \n                onChange={handleChange}\n                onBlur={validateOne}\n              />\n            </label>\n            <div>{emailVal}</div>\n          </div>\n           \n          <div>\n            <label>Female\n              <input \n                type=\"radio\"\n                name=\"gender\"\n                value=\"F\" \n                onChange={handleChange}\n                onBlur={validateOne}\n              />\n            </label>\n            <label>Male\n              <input \n                type=\"radio\"\n                name=\"gender\"\n                value=\"M\" \n                onChange={handleChange}\n                onBlur={validateOne}\n              />\n            </label>\n            <div>{genderVal}</div>\n          </div>\n          \n          <button type=\"submit\">Send</button>\n        </form>\n\n        <div>\n            <h2>Values of the form</h2>\n            <p>{JSON.stringify(values)}</p>\n        </div>\n      </div>\n    )\n}\n\nReactDOM.render(<MyForm />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}